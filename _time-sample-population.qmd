
## Our data exists over time. {transition="fade"}

```{r base_timeline}
#| dev.args: !expr 'list(bg="transparent")'

# Set up data for the timeline. We basically have three segments:
#     - "Beginning of time" to start of experiment
#     - "Start of experiment to end of experiment" ("now")
#     - "Now" to end of time (future) (dashed)
timeline_data <- data.frame(x1 = c(10, 20),
                            x2 = c(20, 26),
                            y = c(10, 10))
labels_data <- data.frame(x = c(15, 20, 23),
                          y = rep(15, 3),
                          label = c("Past", "Present", "Future"))
gg_base_timeline <- ggplot(timeline_data) +
  # Past
  geom_line(mapping = aes(x = x1, y = y), color = "white", size = 1.5) +
  # Future
  geom_line(mapping = aes(x = x2, y = y), color = "white", size = 1.5, linetype = "dashed") +
  # Present Tick Mark
  geom_line(mapping = aes (x = x, y = y), data = data.frame(x = c(20, 20), y = c(9.5, 10.5)),
            color = "white", size = 1.5) +
  scale_y_continuous(limits = c(-2, 20)) +
  scale_x_continuous(limits = c(9, 27)) +
  geom_point(aes(x = 10, y = 10), size = 3, color = "white") +
  geom_path(aes(x = c(26.4, 26.75), y = c(10,10)), arrow = arrow(), 
            color = "white", size = 1.5) +
  geom_text(data = labels_data,
            mapping = aes(x = x , y = y, label = label),
            family = "s_font",
            size = 8, color = "white") +
  theme_void()
gg_base_timeline

```

## So, what is our <span style = "text-decoration: underline;">population</span>? {transition="fade"}

```{r base_timeline_2}
#| dev.args: !expr 'list(bg="transparent")'

gg_base_timeline
```


## Is it the past to the present? {transition="fade"}

```{r base_timeline_past_present}
#| dev.args: !expr 'list(bg="transparent")'

# Bracket lines for the label
bracket_lines <- data.frame(x = c(10, 10, 20),
                            xend = c(10, 20, 20),
                            y = c(8.5, 8, 8),
                            yend = c(8, 8, 8.5))
gg_base_timeline_past_present <- gg_base_timeline +
  xkcdrect(mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax, size = NA),
           data = data.frame(xmin = 10,
                             ymin = 9,
                             xmax = 20,
                             ymax = 11),
           fill = "blue",
           alpha = .2) + 
  xkcdline(mapping = aes(x = x, xend = xend,
                         y = y, yend = yend),
           data = bracket_lines,
           yjitteramount = 0.5) +
  geom_text(mapping = aes(x = 15, y = 7, label = "\"The Population\""),
            family = "Humor Sans", size = 8)
gg_base_timeline_past_present
```

# Maybe? Maybe not.

## Maybe it's the past, present, and future? {transition="fade"}

```{r base_timeline_alltime}
#| dev.args: !expr 'list(bg="transparent")'

# Bracket lines for the label
bracket_lines <- data.frame(x = c(10, 10, 26.75),
                            xend = c(10, 26.75, 26.75),
                            y = c(8.5, 8, 8),
                            yend = c(8, 8, 8.5))
gg_base_timeline_population <- gg_base_timeline +
  xkcdrect(mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax, size = NA),
           data = data.frame(xmin = 10,
                             ymin = 9,
                             xmax = 26.75,
                             ymax = 11),
           fill = "blue",
           alpha = .2) + 
  xkcdline(mapping = aes(x = x, xend = xend,
                         y = y, yend = yend),
           data = bracket_lines,
           yjitteramount = 0.5) +
  geom_text(mapping = aes(x = 18, y = 7, label = "\"The Population\""),
            family = "Humor Sans", size = 8)
gg_base_timeline_population
```


## Or...just the future? {transition="fade"}

```{r base_timeline_future}
#| dev.args: !expr 'list(bg="transparent")'

# Bracket lines for the label
bracket_lines <- data.frame(x = c(20, 20, 26.75),
                            xend = c(20, 26.75, 26.75),
                            y = c(8.5, 8, 8),
                            yend = c(8, 8, 8.5))
gg_base_timeline_future <- gg_base_timeline +
  xkcdrect(mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax, size = NA),
           data = data.frame(xmin = 20,
                             ymin = 9,
                             xmax = 26.75,
                             ymax = 11),
           fill = "blue",
           alpha = .2) + 
  xkcdline(mapping = aes(x = x, xend = xend,
                         y = y, yend = yend),
           data = bracket_lines,
           yjitteramount = 0.5) +
  geom_text(mapping = aes(x = 23.375, y = 7, label = "\"The Population\""),
            family = "Humor Sans", size = 8)
gg_base_timeline_future
```

# So...what is our sample?

## Our sample is a sample <span style="text-decoration: underline;">timeframe</span>. {transition="fade"}

```{r base_timeline_sample}
#| dev.args: !expr 'list(bg="transparent")'

# Bracket lines for the label
bracket_lines <- data.frame(x = c(18, 18, 20),
                            xend = c(18, 20, 20),
                            y = c(8.5, 8, 8),
                            yend = c(8, 8, 8.5))
gg_base_timeline_population <- gg_base_timeline +
  xkcdrect(mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax, size = NA),
           data = data.frame(xmin = 18,
                             ymin = 9,
                             xmax = 20,
                             ymax = 11),
           fill = "#0000ff",
           alpha = .2) + 
  xkcdline(mapping = aes(x = x, xend = xend,
                         y = y, yend = yend),
           data = bracket_lines,
           yjitteramount = 0.3) +
  geom_text(mapping = aes(x = 19, y = 7, label = "Our Sample"),
            family = "Humor Sans", size = 8)
gg_base_timeline_population
```


## This is [imperfect]{.underline}. {transition="fade"}

```{r base_timeline_sample_2}
#| dev.args: !expr 'list(bg="transparent")'

gg_base_timeline_population
```


## Because our reality is [constant change]{.underline}. {transition="fade"}

```{r base_timeline_sample_diverge}
#| dev.args: !expr 'list(bg="transparent")'

# Set up values for "diverging from now" -- four lines that diverge forward and backwards
# from the present. We're going to go clockwise from top left and define the left side of
# each line as the "begin."

diverge_lines_overall <- data.frame(x = c(10, 20, 20, 26.75, 20, 26.75, 10, 20),
                            y = c(15, 11, 11, 15, 9, 5, 5, 9),
                            group = c(1, 1, 2, 2, 3, 3, 4, 4))

# Draw the plot
gg_diverge <- gg_base_timeline_population +
    geom_line(mapping = aes(x = x, y = y, group = group),
           data = diverge_lines_overall, linetype = "dashed",
           color = "white", size = 1) 

gg_diverge

```