---
title: "Time-Series Basics"
subtitle: "Superweek 2023"
author: "Tim Wilson"
format:
  revealjs: 
    theme: moon
    css: includes/styles.css
    footer: \@tgwilson | timwilson7@gmail.com
    transition: zoom
title-slide-attributes:
  data-background-image: /images/saliris.jpeg
  data-background-size: cover
  data-background-opacity: "0.2"
execute:
  echo: false
  dev: "png"
editor: visual
---

# Let's think about time.

# Let's think about statistics.

# Statistics is all about estimating a population from a sample

## When we evaluate historical data, it's a snapshot in time

We think it's about finding "the truth," but what is "the population?"

(Show diagram of time).

## 

:::: {.columns}

::: {.column width="40%"}
The Bowhead Whale Can Live for Up to 200 Years
:::

::: {.column width="60%"}

![DALL-E 2: "A bowhead whale with a long gray beard and spectacles, digital art"](images/whale-beard.png)
:::

::::

## All (Most) of Our Data Is Time-Series

It rarely looks *quite* like this.

```{r setup}
#| dev.args: !expr 'list(bg="transparent")'

source("includes/setup.R")

ggplot(get_ts(), aes(x = date, y = value)) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main

```

## It often has a weekly cycle to it

This is "seasonality" that we'll get to in a bit.

```{r trending}
#| dev.args: !expr 'list(bg="transparent")'

ggplot(get_ts(base = 10000, week_season = TRUE), aes(x = date, y = value)) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main

```

## And it may have a trend to it

```{r}
#| dev.args: !expr 'list(bg="transparent")'

ggplot(get_ts(base = 50000, week_season = TRUE, trend = 0.5), aes(x = date, y = value)) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main
```

## It can have weekly seasonality AND trend

```{r}
#| dev.args: !expr 'list(bg="transparent")'

ggplot(get_ts(base = 50000, week_season = TRUE, trend = .5), aes(x = date, y = value)) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main
```

## An intervention can cause a shift

```{r}
#| dev.args: !expr 'list(bg="transparent")'

intervention_date <- Sys.Date() - 20

ggplot(get_ts(intervention_date = intervention_date, intervention_effect = 0.2), 
       aes(x = date, y = value)) +
  geom_vline(aes(xintercept = intervention_date), linetype = "dashed", color = "gray60",
             linewidth = 1.5) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main

```

## Let's try a bunch of things

```{r}
#| dev.args: !expr 'list(bg="transparent")'

intervention_date <- Sys.Date() - 49

ggplot(get_ts(start = Sys.Date()-365, end = Sys.Date() - 1, increment = "week", 
              trend = 0.8, noise = 0.4, 
              intervention_date = intervention_date, intervention_effect = -0.4), 
       aes(x = as.Date(date), y = value)) +
  geom_vline(aes(xintercept = intervention_date), linetype = "dashed", color = "gray60",
             linewidth = 1.5) +
  geom_line(color = s_line_1, linewidth = 1.1) +
  labs(y = "Sessions") +
  scale_y_continuous(expand = c(0,0), limits = ~ c(0, max(.x) * 1.1), label = comma) +
  theme_main

```

## Stationarity

Define stationarity

Show scenarios: varying mean, varying variance

## First Differences

Spurious correlations abound

```{r}
#| echo: false

ggplot(cars, aes(x = speed, y = dist)) +
  geom_point() +
  theme_minimal()


```

## Time-Series Decomposition

## Bayesian Structural Time-Series (CausalImpact)

Basic...

With covariates

## Quarto

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
